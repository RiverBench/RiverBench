on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Make a tagged release"
    runs-on: "ubuntu-latest"
    container: ghcr.io/riverbench/ci-worker:main
    permissions: write-all
    steps:
      - name: "Checkout repository (with submodules)"
        uses: actions/checkout@v3
        with:
          path: riverbench
          submodules: true

      - name: "Package metadata"
        run: |
          mkdir meta_out
          mkdir release
          ci-worker package-main "${GITHUB_REF_NAME#v}" riverbench meta_out
          tar -czf release/profiles.tar.gz -C meta_out/profiles .
          cd meta_out/profiles
          for f in *; do cp -- "$f" "../../release/profile-$f"; done
          cd ../../
          cp meta_out/metadata.* release

      - name: Fetch the schema repository
        uses: actions/checkout@v3
        with:
          repository: 'RiverBench/schema'
          path: schema

      - name: "Generate documentation"
        run: |
          mkdir docs_out
          ci-worker main-doc-gen "${GITHUB_REF_NAME#v}" riverbench meta_out schema docs_out
          tar -czf release/profiles_docs.tar.gz -C docs_out/profiles .
          mv docs_out/index.md release/index.md

      - name: Upload files for the release
        uses: ncipollo/release-action@v1.12.0
        with:
          prerelease: false
          draft: false
          makeLatest: true
          tag: "${{ env.GITHUB_REF_NAME }}"
          name: "${{ env.GITHUB_REF_NAME }}"
          artifacts: 'release/*'
          generateReleaseNotes: true

  trigger-doc-update-tagged:
    needs: tagged-release
    name: "Trigger documentation update"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Trigger repository_dispatch"
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_DOC_REPO_HOOKS }}
          repository: RiverBench/riverbench.github.io
          event-type: main-doc-update
          client-payload: '{ "tag": "${{ github.ref_name }}" }'
