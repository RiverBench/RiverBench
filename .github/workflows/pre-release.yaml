on:
  push:
    branches:
      - main
  workflow_dispatch: {}
  repository_dispatch:
    types: [pre-release]

concurrency:
  group: main-pre-release
  cancel-in-progress: true

jobs:
  wait:
    uses: RiverBench/ci-workflows/.github/workflows/wait-for-rate-limit.yaml@main
    secrets: inherit
    with:
      needed-calls: 50

  pre-release:
    needs: wait
    name: "Make a pre-release"
    runs-on: "ubuntu-latest"
    container: ghcr.io/riverbench/ci-worker:main
    permissions: write-all
    steps:
      - name: "Checkout repository (with submodules)"
        uses: actions/checkout@v4
        with:
          path: riverbench
          submodules: true

      - name: "Package metadata"
        run: |
          mkdir meta_out
          mkdir release
          ci-worker package-main dev riverbench meta_out
          cp meta_out/metadata.* release
          cp meta_out/dump* release

      - name: Fetch the schema repository
        uses: actions/checkout@v4
        with:
          repository: 'RiverBench/schema'
          path: schema

      - name: "Generate documentation"
        run: |
          mkdir docs_out
          ci-worker main-doc-gen dev riverbench meta_out schema docs_out
          mv meta_out/doc/*.md release/
          mv docs_out/index.md release/index.md

      - name: Upload README.md artifact
        uses: actions/upload-artifact@v4
        with:
          name: readme
          path: docs_out/README.md

      - name: Upload files for the release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          prerelease: true
          draft: false
          omitDraftDuringUpdate: false
          makeLatest: false
          tag: "dev"
          name: "Development pre-release"
          artifacts: 'release/*'
          generateReleaseNotes: true

  update-readme:
    needs: pre-release
    name: "Update README.md"
    runs-on: "ubuntu-latest"
    permissions: write-all
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: Restore README.md
        uses: actions/download-artifact@v4
        with:
          name: readme

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Automatic update of README.md'
          default_author: github_actions
          add: 'README.md'
          push: true

  trigger-doc-update:
    needs: pre-release
    name: "Trigger documentation update"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Trigger repository_dispatch"
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_DOC_REPO_HOOKS }}
          repository: RiverBench/riverbench.github.io
          event-type: main-doc-update
          client-payload: '{ "tag": "dev" }'
